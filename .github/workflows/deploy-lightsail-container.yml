name: Deploy to Lightsail Container

on:
  push:
    branches:
      - develop
      - main

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    environment: ${{ github.ref_name == 'main' && 'production' || 'develop' }}

    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}

      - name: Get latest tag
        id: get_tag
        run: |
          TAG=$(git describe --tags --abbrev=0)
          if [ -z "$TAG" ]; then
            echo "❌ No image found. Please create a tag before deploying."
            exit 1
          fi
          echo "Last tag found: $TAG"

          if [ "${{ github.ref_name }}" = "main" ]; then
            DEPLOY_ENV=production
            VERSION="$TAG"
          else
            DEPLOY_ENV=develop
            CLEAN_TAG="${TAG#dev-}"
            VERSION="$CLEAN_TAG-dev"
          fi

          VERSION="${VERSION#v}"
          echo "DEPLOY_ENV=$DEPLOY_ENV" >> $GITHUB_ENV
          echo "APP_VERSION=$VERSION" >> $GITHUB_ENV

          echo "✅ DEPLOY_ENV=$DEPLOY_ENV"
          echo "✅ APP_VERSION=$VERSION"


      - name: Build Docker image
        env:
          LIGHTSAIL_SERVICE: ${{ secrets.LIGHTSAIL_SERVICE_NAME }}
        run: |
          IMAGE=$LIGHTSAIL_SERVICE:${{ env.APP_VERSION }}
          docker build -t $IMAGE .

      - name: Install lightsailctl plugin
        run: |
          curl -s https://s3.us-west-2.amazonaws.com/lightsailctl/latest/linux-amd64/lightsailctl \
            -o lightsailctl
          chmod +x lightsailctl
          sudo mv lightsailctl /usr/local/bin/

      - name: Push image to Lightsail
        id: push
        env:
          LIGHTSAIL_SERVICE: ${{ secrets.LIGHTSAIL_SERVICE_NAME }}
          AWS_REGION: ${{ secrets.AWS_REGION }}
        run: |
          IMAGE=$LIGHTSAIL_SERVICE:${{ env.APP_VERSION }}
          OUTPUT=$(aws lightsail push-container-image \
            --service-name "$LIGHTSAIL_SERVICE" \
            --label "$LIGHTSAIL_SERVICE" \
            --image "$IMAGE" \
            --region "$AWS_REGION")

          echo "Lightsail push output:"
          echo "$OUTPUT"

          IMAGE_URI=$(echo "$OUTPUT" | grep -oP 'Refer to this image as "\K[^"]+')
          if [ -z "$IMAGE_URI" ]; then
            echo "❌ ERROR: Can not extract image URI from output."
            exit 1
          fi

          echo "✅ Image registered as: $IMAGE_URI"
          echo "IMAGE_URI=$IMAGE_URI" >> $GITHUB_ENV

      - name: Create deployment
        env:
          LIGHTSAIL_SERVICE: ${{ secrets.LIGHTSAIL_SERVICE_NAME }}
          AWS_REGION: ${{ secrets.AWS_REGION }}
        run: |
          IMAGE=${{ env.IMAGE_URI }}

          echo '{
            "'"$LIGHTSAIL_SERVICE"'": {
              "image": "'"$IMAGE"'",
              "ports": { "3000": "HTTP" },
              "environment": {
                 "DEPLOY_ENV": "'"${{ env.DEPLOY_ENV }}"'",
                 "APP_VERSION": "'"${{ env.APP_VERSION }}"'",
                 "DB_HOST": "'"${{ secrets.DB_HOST }}"'",
                 "DB_HOST_IA": "'"${{ secrets.DB_HOST_IA }}"'",
                 "DB_NAME": "'"${{ secrets.DB_NAME }}"'",
                 "DB_NAME_IA": "'"${{ secrets.DB_NAME_IA }}"'",
                 "DB_PASSWORD": "'"${{ secrets.DB_PASSWORD }}"'",
                 "DB_PASSWORD_IA": "'"${{ secrets.DB_PASSWORD_IA }}"'",
                 "DB_PORT": "'"${{ secrets.DB_PORT }}"'",
                 "DB_PORT_IA": "'"${{ secrets.DB_PORT_IA }}"'",
                 "DB_USERNAME": "'"${{ secrets.DB_USERNAME }}"'",
                 "DB_USERNAME_IA": "'"${{ secrets.DB_USERNAME_IA }}"'",
                 "FIREBASE_AUTH_PROVIDER": "'"${{ secrets.FIREBASE_AUTH_PROVIDER }}"'",
                 "FIREBASE_AUTH_URI": "'"${{ secrets.FIREBASE_AUTH_URI }}"'",
                 "FIREBASE_CLIENT": "'"${{ secrets.FIREBASE_CLIENT }}"'",
                 "FIREBASE_CLIENT_ID": "'"${{ secrets.FIREBASE_CLIENT_ID }}"'",
                 "FIREBASE_EMAIL": "'"${{ secrets.FIREBASE_EMAIL }}"'",
                 "FIREBASE_PRIVATE_KEY": "'"${{ secrets.FIREBASE_PRIVATE_KEY }}"'",
                 "FIREBASE_PRIVATE_KEY_ID": "'"${{ secrets.FIREBASE_PRIVATE_KEY_ID }}"'",
                 "FIREBASE_PROJECT_ID": "'"${{ secrets.FIREBASE_PROJECT_ID }}"'",
                 "FIREBASE_TOKEN_URI": "'"${{ secrets.FIREBASE_TOKEN_URI }}"'",
                 "FIREBASE_UNIVERSE_DOMAIN": "'"${{ secrets.FIREBASE_UNIVERSE_DOMAIN }}"'",
                 "GEMINI_API_KEY": "'"${{ secrets.GEMINI_API_KEY }}"'",
                 "MAIL_FROM": "'"${{ secrets.MAIL_FROM }}"'",
                 "MAIL_HOST": "'"${{ secrets.MAIL_HOST }}"'",
                 "MAIL_PASSWORD": "'"${{ secrets.MAIL_PASSWORD }}"'",
                 "MAIL_PORT": "'"${{ secrets.MAIL_PORT }}"'",
                 "MAIL_USER": "'"${{ secrets.MAIL_USER }}"'",
                 "URL_WEB": "'"${{ secrets.URL_WEB }}"'",
                 "JWT_EXPIRES_IN": "'"${{ secrets.JWT_EXPIRES_IN }}"'",
                 "JWT_SECRET": "'"${{ secrets.JWT_SECRET }}"'",
                 "USER_ONE": "'"${{ secrets.USER_ONE }}"'",
                 "USER_TWO": "'"${{ secrets.USER_TWO }}"'",
                 "WHATSAPP_ACCESS_TOKEN": "'"${{ secrets.WHATSAPP_ACCESS_TOKEN }}"'",
                 "WHATSAPP_PHONE_NUMBER_ID": "'"${{ secrets.WHATSAPP_PHONE_NUMBER_ID }}"'",
                 "WHATSAPP_WABA_ID": "'"${{ secrets.WHATSAPP_WABA_ID }}"'"
              }
            }
          }' > containers.json

          echo '{
            "containerName": "'"$LIGHTSAIL_SERVICE"'",
            "containerPort": 3000,
            "healthCheck": {
              "path": "/api",
              "successCodes": "200",
              "healthyThreshold": 2,
              "unhealthyThreshold": 2,
              "timeoutSeconds": 5,
              "intervalSeconds": 10
            }
          }' > public.json

          aws lightsail create-container-service-deployment \
            --service-name "$LIGHTSAIL_SERVICE" \
            --containers file://containers.json \
            --public-endpoint file://public.json \
            --region "$AWS_REGION"
